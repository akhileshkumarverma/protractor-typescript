'use strict';

import {EmailReporter} from "./email_reporter/emailReporter";
import {ConsoleJasmineReporter} from './consoleJasmineReporter';

var path = require("path");

/*
 * author : sudharsan selvaraj
 * created on : 28/10/2017
 *
 * -------------------------------------------------------------
 * Helper Utility class to manager Test reports.
 *
 * Includes below reporters:
 * 1. Html screen shot reporter.
 * 2. jasmine spec reporter (Logs execution status in console)
 * --------------------------------------------------------------
 * 
 */
var reportDirectory:string = "./results/e2e";

export class ReportManager {

    /* gmail Credentials for sending email reports */
    public static emailCredentials = {
        user: "",
        pass: ""
    };

    public static registerJasmineReporters(params?:any) {
        ReportManager.registerJasmineSpecReporter();
        ReportManager.registerJasmineHtmlReporter();
        var detailsToBeDisplayed = {
            "Current url": params.baseUrl || params.url,
            "Email reports will be sent to": params.report.email.toLowerCase() == "no" ? "None" : params.report.email
        };

        ReportManager.initializeConsoleJasmineReporter(detailsToBeDisplayed);
    };

    /*
     *  Reporter will output the execution log to console in real time with stacktrace.
     *  reference: https://www.npmjs.com/package/jasmine-spec-reporter
     *
     *  refer https://github.com/bcaudan/jasmine-spec-reporter/blob/aeb16299a16f23e21527e96d126306289e6bf8b5/src/configuration.ts
     *  for full configuration options.
     */

    private static registerJasmineSpecReporter() {

        var SpecReporter = require('jasmine-spec-reporter').SpecReporter;
        jasmine.getEnv().addReporter(new SpecReporter({
            suite: {
                displayNumber: true,
            },
            spec: {
                displayStacktrace: true,
                displayFailed: true,
                displayDuration: true,
            },
            summary: {
                displayErrorMessages: true,
                displayFailed: true,
                displayDuration: true
            },
        }));

    }

    /*
     *  Will generate HTML report with screenshots.
     *  reference: https://www.npmjs.com/package/protractor-beautiful-reporter
     */

    public static registerJasmineHtmlReporter() {
        var HtmlReporter = require('protractor-beautiful-reporter');
        jasmine.getEnv().addReporter(new HtmlReporter({
            baseDirectory: reportDirectory,
            screenshotsSubfolder: 'images',
            jsonsSubfolder: 'jsons',
            takeScreenShotsOnlyForFailedSpecs: true,
            docTitle: 'my reporter',
            preserveDirectory: false,
        }).getJasmine2Reporter());
    }


    /*
     *  Below method will send email notification with HTML report generated by `protractor-beautiful-reporter`.
     *
     *  @params {recipients} string. comma separated email id's;
     *  @params {outputOption} Object. Key value pair that wil be displayed in email body;
     */


    public static emailHtmlReport(recipients?:string, outputOptions?:any) {
        var emailReporter = new EmailReporter(ReportManager.emailCredentials.user, ReportManager.emailCredentials.pass, reportDirectory,outputOptions);
        return emailReporter.sendEmailNotification(recipients);
    }

    public static initializeConsoleJasmineReporter(params) {
        jasmine.getEnv().addReporter(new ConsoleJasmineReporter(params));
    }


    public static clearReporters() {
        jasmine.getEnv().clearReporters();
    }

}
